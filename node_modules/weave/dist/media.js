"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_AUDIO_TYPE = exports.DEFAULT_IMAGE_TYPE = void 0;
exports.weaveImage = weaveImage;
exports.isWeaveImage = isWeaveImage;
exports.weaveAudio = weaveAudio;
exports.isWeaveAudio = isWeaveAudio;
exports.isMedia = isMedia;
exports.DEFAULT_IMAGE_TYPE = 'png';
exports.DEFAULT_AUDIO_TYPE = 'wav';
/**
 * Create a new WeaveImage object
 *
 * @param options The options for this media type
 *    - data: The raw image data as a Buffer
 *    - imageType: (Optional) The type of image file, currently only 'png' is supported
 *
 * @example
 * const imageBuffer = fs.readFileSync('path/to/image.png');
 * const weaveImage = weaveImage({ data: imageBuffer });
 */
function weaveImage({ data, imageType }) {
    const resolvedImageType = imageType !== null && imageType !== void 0 ? imageType : exports.DEFAULT_IMAGE_TYPE;
    return {
        _weaveType: 'Image',
        data,
        imageType: resolvedImageType,
    };
}
// Function to check if a value is a WeaveImage
function isWeaveImage(value) {
    return value && value._weaveType === 'Image';
}
/**
 * Create a new WeaveAudio object
 *
 * @param options The options for this media type
 *    - data: The raw audio data as a Buffer
 *    - audioType: (Optional) The type of audio file, currently only 'wav' is supported
 *
 * @example
 * const audioBuffer = fs.readFileSync('path/to/audio.wav');
 * const weaveAudio = weaveAudio({ data: audioBuffer });
 */
function weaveAudio({ data, audioType }) {
    const resolvedAudioType = audioType !== null && audioType !== void 0 ? audioType : exports.DEFAULT_AUDIO_TYPE;
    return {
        _weaveType: 'Audio',
        data,
        audioType: resolvedAudioType,
    };
}
function isWeaveAudio(value) {
    return value && value._weaveType === 'Audio';
}
function isMedia(value) {
    return isWeaveImage(value) || isWeaveAudio(value);
}
//# sourceMappingURL=media.js.map