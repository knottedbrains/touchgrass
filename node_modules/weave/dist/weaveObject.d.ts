export interface Callable {
}
export interface WeaveObjectParameters {
    name?: string;
    description?: string;
}
/**
 * Represents a reference to a saved Weave object.
 *
 * Generally, end users will not need to interact with this class directly.
 *
 * An ObjectRef contains the project ID, object ID, and digest that uniquely identify
 * a saved object in Weave's storage system.
 *
 * @example
 * const ref = new ObjectRef('my-project', 'abc123', 'def456');
 * const uri = ref.uri(); // weave:///my-project/object/abc123:def456
 */
export declare class ObjectRef {
    projectId: string;
    objectId: string;
    digest: string;
    constructor(projectId: string, objectId: string, digest: string);
    uri(): string;
    ui_url(): string;
    get(): Promise<any>;
}
export declare class WeaveObject {
    protected _baseParameters: WeaveObjectParameters;
    __savedRef?: ObjectRef | Promise<ObjectRef>;
    constructor(_baseParameters: WeaveObjectParameters);
    className(): any;
    saveAttrs(): {
        [key: string]: any;
    };
    get name(): string;
    get description(): string | undefined;
}
export declare function getClassChain(instance: WeaveObject): string[];
//# sourceMappingURL=weaveObject.d.ts.map