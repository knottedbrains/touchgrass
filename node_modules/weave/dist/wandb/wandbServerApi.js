"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WandbServerApi = void 0;
const userAgent_1 = require("../utils/userAgent");
const VIEWER_DEFAULT_ENTITY_QUERY = `
query DefaultEntity {
    viewer {
        username
        defaultEntity {
            name
        }
    }
}
`;
class WandbServerApi {
    constructor(baseUrl, apiKey) {
        this.baseUrl = baseUrl;
        this.apiKey = apiKey;
    }
    async graphqlRequest(query, variables = {}) {
        try {
            const response = await fetch(`${this.baseUrl}/graphql`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'User-Agent': (0, userAgent_1.userAgent)(),
                    Authorization: `Basic ${Buffer.from(`api:${this.apiKey}`).toString('base64')}`,
                },
                body: JSON.stringify({
                    query,
                    variables,
                }),
            });
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}, statusText: ${response.statusText}`);
            }
            const result = await response.json();
            if (result.errors) {
                throw new Error(`GraphQL Error: ${JSON.stringify(result.errors)}`);
            }
            return result.data;
        }
        catch (error) {
            console.error('Error in graphqlRequest:', error);
            throw error;
        }
    }
    async defaultEntityName() {
        try {
            const result = await this.graphqlRequest(VIEWER_DEFAULT_ENTITY_QUERY);
            if (!result.viewer ||
                !result.viewer.defaultEntity ||
                !result.viewer.defaultEntity.name) {
                throw new Error('Default entity name not found in the response');
            }
            return result.viewer.defaultEntity.name;
        }
        catch (error) {
            console.error('Error in defaultEntityName:', error);
            throw error;
        }
    }
}
exports.WandbServerApi = WandbServerApi;
//# sourceMappingURL=wandbServerApi.js.map