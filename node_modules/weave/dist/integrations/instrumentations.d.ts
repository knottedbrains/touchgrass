export declare const symESMInstrumentations: unique symbol;
export declare const symESMCache: unique symbol;
export interface CacheEntry {
    originalExports: any;
    patchedExports: any;
}
declare const _default: any;
export default _default;
export type HookFn = (exports: any, name: string, baseDir: string) => any;
export interface CJSInstrumentation {
    moduleName: string;
    subPath: string;
    version: string;
    hook: HookFn;
}
export interface ESMInstrumentation {
    moduleName: string;
    version: string;
    hook: HookFn;
}
export declare function addCJSInstrumentation({ moduleName, subPath, version, hook, }: CJSInstrumentation): void;
export declare function addESMInstrumentation({ moduleName, version, hook, }: ESMInstrumentation): void;
export declare function getESMInstrumentedModules(): string[];
//# sourceMappingURL=instrumentations.d.ts.map