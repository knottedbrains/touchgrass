export declare const DEFAULT_IMAGE_TYPE = "png";
export declare const DEFAULT_AUDIO_TYPE = "wav";
export type ImageType = 'png';
export type AudioType = 'wav';
type WeaveImageInput = {
    data: Buffer;
    imageType?: ImageType;
};
export interface WeaveImage extends WeaveImageInput {
    _weaveType: 'Image';
}
/**
 * Create a new WeaveImage object
 *
 * @param options The options for this media type
 *    - data: The raw image data as a Buffer
 *    - imageType: (Optional) The type of image file, currently only 'png' is supported
 *
 * @example
 * const imageBuffer = fs.readFileSync('path/to/image.png');
 * const weaveImage = weaveImage({ data: imageBuffer });
 */
export declare function weaveImage({ data, imageType }: WeaveImageInput): WeaveImage;
export declare function isWeaveImage(value: any): value is WeaveImage;
type WeaveAudioInput = {
    data: Buffer;
    audioType?: AudioType;
};
export interface WeaveAudio extends WeaveAudioInput {
    _weaveType: 'Audio';
}
/**
 * Create a new WeaveAudio object
 *
 * @param options The options for this media type
 *    - data: The raw audio data as a Buffer
 *    - audioType: (Optional) The type of audio file, currently only 'wav' is supported
 *
 * @example
 * const audioBuffer = fs.readFileSync('path/to/audio.wav');
 * const weaveAudio = weaveAudio({ data: audioBuffer });
 */
export declare function weaveAudio({ data, audioType }: WeaveAudioInput): WeaveAudio;
export declare function isWeaveAudio(value: any): value is WeaveAudio;
type WeaveMedia = WeaveImage | WeaveAudio;
export declare function isMedia(value: any): value is WeaveMedia;
export {};
//# sourceMappingURL=media.d.ts.map